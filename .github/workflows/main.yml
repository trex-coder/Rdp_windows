name: CI

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Download ngrok
      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip

    - name: Extract ngrok
      run: Expand-Archive ngrok.zip -DestinationPath ngrok

    - name: Auth ngrok
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable Remote Desktop
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

    - name: Set runneradmin password
      run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)

    - name: Install Python (for noVNC utils)
      run: |
        Invoke-WebRequest https://www.python.org/ftp/python/3.10.9/python-3.10.9-amd64.exe -OutFile python.exe
        Start-Process python.exe -ArgumentList "/quiet InstallAllUsers=1 PrependPath=1" -Wait

    - name: Download and install TightVNC
      run: |
        $url = "https://www.tightvnc.com/download/2.8.81/tightvnc-2.8.81-gpl-setup-64bit.msi"
        $output = "tightvnc.msi"
        Invoke-WebRequest -Uri $url -OutFile $output
        Start-Process msiexec.exe -ArgumentList "/i", "$output", "/quiet" -Wait

    - name: Start TightVNC server
      run: Start-Process -FilePath "C:\Program Files\TightVNC\tvnserver.exe"

    - name: Clone and start noVNC
      run: |
        git clone https://github.com/novnc/noVNC.git
        cd noVNC
        npm install
        Start-Process node -ArgumentList ".\utils\websockify.js 6901 localhost:5900" -RedirectStandardOutput "out.log" -RedirectStandardError "err.log"

    - name: Sleep to let VNC and noVNC start
      run: Start-Sleep -Seconds 30

    - name: Check if TightVNC is running
      run: Get-Process | Where-Object { $_.ProcessName -like "*tvnserver*" }

    - name: Check if port 6901 is open
      run: netstat -an | findstr ":6901"

    - name: Start ngrok HTTP (noVNC)
      run: Start-Process .\ngrok\ngrok.exe -ArgumentList "http", "6901"

    - name: Loop and print Ngrok URLs forever
      run: |
        while ($true) {
          Write-Host "========== NGROK TUNNELS =========="
          try {
            $url = (Invoke-RestMethod http://127.0.0.1:4040/api/tunnels).tunnels[0].public_url
            Write-Host "URL: $url"
          } catch {
            Write-Host "Ngrok tunnel not available yet..."
          }
          Start-Sleep -Seconds 10
        }
