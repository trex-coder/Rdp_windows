name: CI

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Set up job
      run: echo "Starting..."

    - name: Download ngrok
      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip

    - name: Extract ngrok
      run: Expand-Archive ngrok.zip

    - name: Auth ngrok
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable Remote Desktop
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1

    - name: Set runneradmin password
      run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)

    - name: Install Python (for noVNC)
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install and Start noVNC (KasmVNC-style)
      run: |
        Invoke-WebRequest https://github.com/novnc/noVNC/archive/refs/heads/master.zip -OutFile novnc.zip
        Expand-Archive novnc.zip -DestinationPath .
        Rename-Item .\noVNC-master .\novnc
        Copy-Item .\novnc\vnc.html .\novnc\index.html
        Start-Process "python" -ArgumentList "-m", "http.server", "6901", "--directory", ".\novnc" -WindowStyle Hidden

    - name: Sleep to let server start
      run: Start-Sleep -Seconds 10

    - name: Start ngrok for RDP
      shell: pwsh
      run: Start-Job { .\ngrok\ngrok.exe tcp 3389 } | Out-Null

    - name: Start ngrok for noVNC (HTTP)
      shell: pwsh
      run: Start-Job { .\ngrok\ngrok.exe http 6901 } | Out-Null

    - name: Loop and print Ngrok URLs forever
      shell: pwsh
      run: |
        Write-Host "Starting infinite Ngrok URL monitor..."
        while ($true) {
          try {
            $response = Invoke-RestMethod http://127.0.0.1:4040/api/tunnels
            Write-Host "========== NGROK TUNNELS =========="
            foreach ($tunnel in $response.tunnels) {
              Write-Host "Name: $($tunnel.name)"
              Write-Host "URL: $($tunnel.public_url)"
            }
            Write-Host "==================================="
          } catch {
            Write-Host "Ngrok API not ready or error occurred. Retrying..."
          }
          Start-Sleep -Seconds 30
        }
