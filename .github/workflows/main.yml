name: Windows Reemo Mock Session

on: [push, workflow_dispatch]

jobs:
  reemo-session:
    runs-on: windows-latest

    steps:
      - name: Generate Random VM Name
        run: |
          $vmName = "vm-" + ([System.Guid]::NewGuid().ToString().Substring(0, 8))
          echo "VM_NAME=$vmName" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8

      - name: Install Python and Firebase Admin
        run: |
          choco install -y python
          python -m pip install firebase-admin

      - name: (Mock) Install Reemo Agent
        run: |
          Invoke-WebRequest -Uri "https://reemo.io/download/windows" -OutFile "ReemoSetup.exe"
          echo "Reemo agent downloaded (registration not possible in GitHub VMs)."

      - name: Generate Mock Reemo Session ID
        run: |
          $sessionId = [System.Guid]::NewGuid().ToString()
          $deviceId = "mock-device-" + ([System.Guid]::NewGuid().ToString().Substring(0, 6))
          echo "SESSION_ID=$sessionId" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8
          echo "DEVICE_ID=$deviceId" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8

      - name: Upload Session Info to Firebase
        env:
          FIREBASE_KEY: ${{ secrets.FIREBASE_CREDENTIALS_JSON }}
          GITHUB_ID: ${{ github.actor }}
          VM_NAME: ${{ env.VM_NAME }}
          SESSION_ID: ${{ env.SESSION_ID }}
          DEVICE_ID: ${{ env.DEVICE_ID }}
        run: |
          echo "$env:FIREBASE_KEY" > creds.json
          if (Test-Path upload_url.py) {
            python upload_url.py
          } else {
            echo "upload_url.py not found!"
            exit 1
          }

      - name: Loop output of session data
        run: |
          while ($true) {
            echo "GitHub ID: ${{ github.actor }}"
            echo "VM Name: ${{ env.VM_NAME }}"
            echo "Session ID: ${{ env.SESSION_ID }}"
            echo "Device ID: ${{ env.DEVICE_ID }}"
            Start-Sleep -Seconds 10
          }
