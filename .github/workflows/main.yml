name: CI

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Download ngrok
      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip

    - name: Extract ngrok
      run: Expand-Archive ngrok.zip

    - name: Authenticate ngrok
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable Terminal Services
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0

    - name: Enable Remote Desktop Firewall Rule
      run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

    - name: Configure RDP User Authentication
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1

    - name: Set Local User Password
      run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)

    - name: Create ngrok Tunnel and Fetch Endpoint
      run: |
        Start-Process -NoNewWindow -FilePath .\ngrok\ngrok.exe -ArgumentList "tcp 3389" -PassThru
        Start-Sleep -Seconds 10 # Give ngrok a few seconds to start
        $endTime = (Get-Date).AddHours(7)
        $webhookUrl = $Env:DISCORD_WEBHOOK_URL
        while ((Get-Date) -lt $endTime) {
          try {
            $response = Invoke-RestMethod http://127.0.0.1:4040/api/tunnels
            $endpoint = $response.tunnels[0].public_url
            Write-Host "ngrok public URL: $endpoint"
            $randomCode = -join ((48..57) + (65..90) + (97..122) | Get-Random -Count 9 | % {[char]$_})
            Write-Host "Random Code: $randomCode"
            $payload = @{
              content = "ngrok public URL: $endpoint`nRandom Code: $randomCode"
            } | ConvertTo-Json
            Invoke-RestMethod -Uri $webhookUrl -Method Post -Body $payload -ContentType 'application/json'

            # Create HTML file with endpoint details
            $htmlContent = @"
<!DOCTYPE html>
<html>
<head>
    <title>ngrok Endpoint</title>
</head>
<body>
    <h1>ngrok public URL: $endpoint</h1>
    <p>Random Code: $randomCode</p>
</body>
</html>
"@
            Set-Content -Path "endpoint.html" -Value $htmlContent -Force

            break
          } catch {
            Write-Host "Failed to fetch ngrok endpoint or send to webhook."
          }
          Start-Sleep -Seconds 60 # Wait for a minute before checking again
        }
        Write-Host "The 7-hour period has ended."
      env:
        DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install Vercel CLI
      run: npm install -g vercel

    - name: Verify Vercel CLI Installation
      run: vercel --version

    - name: Deploy to Vercel
      run: vercel --token $Env:VERCEL_TOKEN --project $Env:VERCEL_PROJECT_ID --prod
      env:
        VERCEL_TOKEN: BOJQ5RZcGgocidy8V947VZPp
        VERCEL_PROJECT_ID: prj_tEMnvbenIbFXHcQmO0ekIkj4o2L6
