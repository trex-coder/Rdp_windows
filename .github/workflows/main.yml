name: CI

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Enable Remote Management and Screen Sharing
      run: |
        echo "Enabling Remote Management..."
        sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
          -activate -configure -access -on -users runneradmin -privs -all
        sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
          -configure -allowAccessFor -allUsers
        echo "Remote Management enabled successfully."

    - name: Configure VNC Password Authentication
      run: |
        echo "Setting up VNC password authentication..."
        sudo defaults write /Library/Preferences/com.apple.RemoteManagement VNCAlwaysStartOnConsole -bool true
        sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
          -configure -clientopts -setvnclegacy -vnclegacy yes \
          -clientopts -setvncpw -vncpw P@ssw0rd!
        sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -restart
        echo "VNC password authentication configured successfully."

    - name: Allow VNC Through Firewall
      run: |
        echo "Allowing VNC through firewall..."
        sudo /usr/libexec/ApplicationFirewall/socketfilterfw --add /System/Library/CoreServices/RemoteManagement/ARDAgent.app
        sudo /usr/libexec/ApplicationFirewall/socketfilterfw --unblockapp /System/Library/CoreServices/RemoteManagement/ARDAgent.app
        echo "Firewall configured for VNC access."

    - name: Force macOS to Render Desktop
      run: |
        echo "Forcing macOS to render the desktop..."
        sudo defaults write /Library/Preferences/com.apple.windowserver DisplayCreateFakeDisplay -bool true
        sudo killall -HUP WindowServer
        sleep 5  # Allow time for WindowServer to restart
        osascript -e 'tell application "System Events" to keystroke "r"'
        echo "macOS display rendering forced successfully."

    - name: Keep Session Active
      run: |
        echo "Keeping session active..."
        while true; do
          osascript -e 'tell application "System Events" to keystroke " "'
          sleep 60  # Simulate activity every minute
        done
